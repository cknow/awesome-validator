import { assert } from 'chai';

import { AbstractRule } from '../../src/rules/abstract-rule';
import { Ip } from '../../src/rules/ip';

describe('Ip', () => {

    let ip: Ip;

    beforeEach(() => {
        ip = new Ip();
    });

    it('is rule', () => {
        assert.instanceOf(ip, AbstractRule);
    });

    it('values is valid', () => {
        assert.isTrue(new Ip('ipv4').validate('172.26.168.134'));
        assert.isTrue(new Ip('Ipv4').validate('212.58.241.131'));
        assert.isTrue(new Ip('ipv6').validate('fe80::217:f2ff:254.7.237.98'));
        assert.isTrue(new Ip('Ipv6').validate('2001:DB8:0:0:8:800:200C:417A'));
        assert.isTrue(new Ip('ipv4', 'ipv6').validate('173.194.34.134'));
        assert.isTrue(new Ip('Ipv4', 'Ipv6').validate('2001:db8::1428:57ab'));

        assert.isTrue(ip.validate('0.0.0.0'));
        assert.isTrue(ip.validate('8.8.8.8'));
        assert.isTrue(ip.validate('127.0.0.1'));
        assert.isTrue(ip.validate('100.100.100.100'));
        assert.isTrue(ip.validate('192.168.0.1'));
        assert.isTrue(ip.validate('18.101.25.153'));
        assert.isTrue(ip.validate('123.23.34.2'));
        assert.isTrue(ip.validate('172.26.168.134'));
        assert.isTrue(ip.validate('212.58.241.131'));
        assert.isTrue(ip.validate('128.0.0.0'));
        assert.isTrue(ip.validate('23.71.254.72'));
        assert.isTrue(ip.validate('223.255.255.255'));
        assert.isTrue(ip.validate('192.0.2.235'));
        assert.isTrue(ip.validate('99.198.122.146'));
        assert.isTrue(ip.validate('46.51.197.88'));
        assert.isTrue(ip.validate('173.194.34.134'));
        assert.isTrue(ip.validate('::'));
        assert.isTrue(ip.validate('1::'));
        assert.isTrue(ip.validate('::1'));
        assert.isTrue(ip.validate('1::8'));
        assert.isTrue(ip.validate('1::7:8'));
        assert.isTrue(ip.validate('1:2:3:4:5:6:7:8'));
        assert.isTrue(ip.validate('1:2:3:4:5:6::8'));
        assert.isTrue(ip.validate('1:2:3:4:5:6:7::'));
        assert.isTrue(ip.validate('1:2:3:4:5::7:8'));
        assert.isTrue(ip.validate('1:2:3:4:5::8'));
        assert.isTrue(ip.validate('1:2:3::8'));
        assert.isTrue(ip.validate('1::4:5:6:7:8'));
        assert.isTrue(ip.validate('1::6:7:8'));
        assert.isTrue(ip.validate('1::3:4:5:6:7:8'));
        assert.isTrue(ip.validate('1:2:3:4::6:7:8'));
        assert.isTrue(ip.validate('1:2::4:5:6:7:8'));
        assert.isTrue(ip.validate('::2:3:4:5:6:7:8'));
        assert.isTrue(ip.validate('1:2::8'));
        assert.isTrue(ip.validate('2001:0000:1234:0000:0000:C1C0:ABCD:0876'));
        assert.isTrue(ip.validate('3ffe:0b00:0000:0000:0001:0000:0000:000a'));
        assert.isTrue(ip.validate('FF02:0000:0000:0000:0000:0000:0000:0001'));
        assert.isTrue(ip.validate('0000:0000:0000:0000:0000:0000:0000:0001'));
        assert.isTrue(ip.validate('0000:0000:0000:0000:0000:0000:0000:0000'));
        assert.isTrue(ip.validate('::ffff:192.168.1.26'));
        assert.isTrue(ip.validate('2::10'));
        assert.isTrue(ip.validate('ff02::1'));
        assert.isTrue(ip.validate('fe80::'));
        assert.isTrue(ip.validate('2002::'));
        assert.isTrue(ip.validate('2001:db8::'));
        assert.isTrue(ip.validate('2001:0db8:1234::'));
        assert.isTrue(ip.validate('::ffff:0:0'));
        assert.isTrue(ip.validate('::ffff:192.168.1.1'));
        assert.isTrue(ip.validate('1:2:3:4::8'));
        assert.isTrue(ip.validate('1::2:3:4:5:6:7'));
        assert.isTrue(ip.validate('1::2:3:4:5:6'));
        assert.isTrue(ip.validate('1::2:3:4:5'));
        assert.isTrue(ip.validate('1::2:3:4'));
        assert.isTrue(ip.validate('1::2:3'));
        assert.isTrue(ip.validate('::2:3:4:5:6:7'));
        assert.isTrue(ip.validate('::2:3:4:5:6'));
        assert.isTrue(ip.validate('::2:3:4:5'));
        assert.isTrue(ip.validate('::2:3:4'));
        assert.isTrue(ip.validate('::2:3'));
        assert.isTrue(ip.validate('::8'));
        assert.isTrue(ip.validate('1:2:3:4:5:6::'));
        assert.isTrue(ip.validate('1:2:3:4:5::'));
        assert.isTrue(ip.validate('1:2:3:4::'));
        assert.isTrue(ip.validate('1:2:3::'));
        assert.isTrue(ip.validate('1:2::'));
        assert.isTrue(ip.validate('1:2:3:4::7:8'));
        assert.isTrue(ip.validate('1:2:3::7:8'));
        assert.isTrue(ip.validate('1:2::7:8'));
        assert.isTrue(ip.validate('1:2:3:4:5:6:1.2.3.4'));
        assert.isTrue(ip.validate('1:2:3:4:5::1.2.3.4'));
        assert.isTrue(ip.validate('1:2:3:4::1.2.3.4'));
        assert.isTrue(ip.validate('1:2:3::1.2.3.4'));
        assert.isTrue(ip.validate('1:2::1.2.3.4'));
        assert.isTrue(ip.validate('1::1.2.3.4'));
        assert.isTrue(ip.validate('1:2:3:4::5:1.2.3.4'));
        assert.isTrue(ip.validate('1:2:3::5:1.2.3.4'));
        assert.isTrue(ip.validate('1:2::5:1.2.3.4'));
        assert.isTrue(ip.validate('1::5:1.2.3.4'));
        assert.isTrue(ip.validate('1::5:11.22.33.44'));
        assert.isTrue(ip.validate('fe80::217:f2ff:254.7.237.98'));
        assert.isTrue(ip.validate('fe80::217:f2ff:fe07:ed62'));
        assert.isTrue(ip.validate('2001:DB8:0:0:8:800:200C:417A'));
        assert.isTrue(ip.validate('FF01:0:0:0:0:0:0:101'));
        assert.isTrue(ip.validate('0:0:0:0:0:0:0:1'));
        assert.isTrue(ip.validate('0:0:0:0:0:0:0:0'));
        assert.isTrue(ip.validate('2001:DB8::8:800:200C:417A'));
        assert.isTrue(ip.validate('FF01::101'));
        assert.isTrue(ip.validate('0:0:0:0:0:0:13.1.68.3'));
        assert.isTrue(ip.validate('0:0:0:0:0:FFFF:129.144.52.38'));
        assert.isTrue(ip.validate('::13.1.68.3'));
        assert.isTrue(ip.validate('::FFFF:129.144.52.38'));
        assert.isTrue(ip.validate('fe80:0000:0000:0000:0204:61ff:fe9d:f156'));
        assert.isTrue(ip.validate('fe80:0:0:0:204:61ff:fe9d:f156'));
        assert.isTrue(ip.validate('fe80::204:61ff:fe9d:f156'));
        assert.isTrue(ip.validate('fe80:0:0:0:204:61ff:254.157.241.86'));
        assert.isTrue(ip.validate('fe80::204:61ff:254.157.241.86'));
        assert.isTrue(ip.validate('fe80::1'));
        assert.isTrue(ip.validate('2001:0db8:85a3:0000:0000:8a2e:0370:7334'));
        assert.isTrue(ip.validate('2001:db8:85a3:0:0:8a2e:370:7334'));
        assert.isTrue(ip.validate('2001:db8:85a3::8a2e:370:7334'));
        assert.isTrue(ip.validate('2001:0db8:0000:0000:0000:0000:1428:57ab'));
        assert.isTrue(ip.validate('2001:0db8:0000:0000:0000::1428:57ab'));
        assert.isTrue(ip.validate('2001:0db8:0:0:0:0:1428:57ab'));
        assert.isTrue(ip.validate('2001:0db8:0:0::1428:57ab'));
        assert.isTrue(ip.validate('2001:0db8::1428:57ab'));
        assert.isTrue(ip.validate('2001:db8::1428:57ab'));
        assert.isTrue(ip.validate('::ffff:12.34.56.78'));
        assert.isTrue(ip.validate('::ffff:0c22:384e'));
        assert.isTrue(ip.validate('2001:0db8:1234:0000:0000:0000:0000:0000'));
        assert.isTrue(ip.validate('2001:0db8:1234:ffff:ffff:ffff:ffff:ffff'));
        assert.isTrue(ip.validate('2001:db8:a::123'));
        assert.isTrue(ip.validate('::ffff:192.0.2.128'));
        assert.isTrue(ip.validate('::ffff:c000:280'));
        assert.isTrue(ip.validate('a:b:c:d:e:f:f1:f2'));
        assert.isTrue(ip.validate('a:b:c::d:e:f:f1'));
        assert.isTrue(ip.validate('a:b:c::d:e:f'));
        assert.isTrue(ip.validate('a:b:c::d:e'));
        assert.isTrue(ip.validate('a:b:c::d'));
        assert.isTrue(ip.validate('::a'));
        assert.isTrue(ip.validate('::a:b:c'));
        assert.isTrue(ip.validate('::a:b:c:d:e:f:f1'));
        assert.isTrue(ip.validate('a::'));
        assert.isTrue(ip.validate('a:b:c::'));
        assert.isTrue(ip.validate('a:b:c:d:e:f:f1::'));
        assert.isTrue(ip.validate('a:bb:ccc:dddd:000e:00f:0f::'));
        assert.isTrue(ip.validate('0:a:0:a:0:0:0:a'));
        assert.isTrue(ip.validate('0:a:0:0:a:0:0:a'));
        assert.isTrue(ip.validate('2001:db8:1:1:1:1:0:0'));
        assert.isTrue(ip.validate('2001:db8:1:1:1:0:0:0'));
        assert.isTrue(ip.validate('2001:db8:1:1:0:0:0:0'));
        assert.isTrue(ip.validate('2001:db8:1:0:0:0:0:0'));
        assert.isTrue(ip.validate('2001:db8:0:0:0:0:0:0'));
        assert.isTrue(ip.validate('2001:0:0:0:0:0:0:0'));
        assert.isTrue(ip.validate('A:BB:CCC:DDDD:000E:00F:0F::'));
        assert.isTrue(ip.validate('0:0:0:0:0:0:0:a'));
        assert.isTrue(ip.validate('0:0:0:0:a:0:0:0'));
        assert.isTrue(ip.validate('0:0:0:a:0:0:0:0'));
        assert.isTrue(ip.validate('a:0:0:a:0:0:a:a'));
        assert.isTrue(ip.validate('a:0:0:a:0:0:0:a'));
        assert.isTrue(ip.validate('a:0:0:0:a:0:0:a'));
        assert.isTrue(ip.validate('a:0:0:0:a:0:0:0'));
        assert.isTrue(ip.validate('a:0:0:0:0:0:0:0'));
        assert.isTrue(ip.validate('fe80::7:8%eth0'));
        assert.isTrue(ip.validate('fe80::7:8%1'));
    });

    it('values is not valid', () => {
        assert.isFalse(new Ip('ipv4').validate('.100.100.100.100'));
        assert.isFalse(new Ip('Ipv4').validate('999.999.999.999'));
        assert.isFalse(new Ip('ipv6').validate('02001:0000:1234:0000:0000:C1C0:ABCD:0876'));
        assert.isFalse(new Ip('Ipv6').validate('::1111:2222:3333:4444:5555:6666::'));
        assert.isFalse(new Ip('ipv4', 'ipv6').validate('foo'));
        assert.isFalse(new Ip('Ipv4', 'Ipv6').validate('bar'));

        assert.isFalse(ip.validate('.100.100.100.100'));
        assert.isFalse(ip.validate('100..100.100.100.'));
        assert.isFalse(ip.validate('100.100.100.100.'));
        assert.isFalse(ip.validate('999.999.999.999'));
        assert.isFalse(ip.validate('256.256.256.256'));
        assert.isFalse(ip.validate('256.100.100.100.100'));
        assert.isFalse(ip.validate('123.123.123'));
        assert.isFalse(ip.validate('http://123.123.123'));
        assert.isFalse(ip.validate('1000.2.3.4'));
        assert.isFalse(ip.validate('999.2.3.4'));
        assert.isFalse(ip.validate(''));
        assert.isFalse(ip.validate('1:'));
        assert.isFalse(ip.validate(':1'));
        assert.isFalse(ip.validate('11:36:12'));
        assert.isFalse(ip.validate('02001:0000:1234:0000:0000:C1C0:ABCD:0876'));
        assert.isFalse(ip.validate('2001:0000:1234:0000:00001:C1C0:ABCD:0876'));
        assert.isFalse(ip.validate('2001:0000:1234: 0000:0000:C1C0:ABCD:0876'));
        assert.isFalse(ip.validate('2001:1:1:1:1:1:255Z255X255Y255'));
        assert.isFalse(ip.validate('3ffe:0b00:0000:0001:0000:0000:000a'));
        assert.isFalse(ip.validate('FF02:0000:0000:0000:0000:0000:0000:0000:0001'));
        assert.isFalse(ip.validate('3ffe:b00::1::a'));
        assert.isFalse(ip.validate('::1111:2222:3333:4444:5555:6666::'));
        assert.isFalse(ip.validate('1:2:3::4:5::7:8'));
        assert.isFalse(ip.validate('12345::6:7:8'));
        assert.isFalse(ip.validate('1::5:400.2.3.4'));
        assert.isFalse(ip.validate('1::5:260.2.3.4'));
        assert.isFalse(ip.validate('1::5:256.2.3.4'));
        assert.isFalse(ip.validate('1::5:1.256.3.4'));
        assert.isFalse(ip.validate('1::5:1.2.256.4'));
        assert.isFalse(ip.validate('1::5:1.2.3.256'));
        assert.isFalse(ip.validate('1::5:300.2.3.4'));
        assert.isFalse(ip.validate('1::5:1.300.3.4'));
        assert.isFalse(ip.validate('1::5:1.2.300.4'));
        assert.isFalse(ip.validate('1::5:1.2.3.300'));
        assert.isFalse(ip.validate('1::5:900.2.3.4'));
        assert.isFalse(ip.validate('1::5:1.900.3.4'));
        assert.isFalse(ip.validate('1::5:1.2.900.4'));
        assert.isFalse(ip.validate('1::5:1.2.3.900'));
        assert.isFalse(ip.validate('1::5:300.300.300.300'));
        assert.isFalse(ip.validate('1::5:3000.30.30.30'));
        assert.isFalse(ip.validate('1::400.2.3.4'));
        assert.isFalse(ip.validate('1::260.2.3.4'));
        assert.isFalse(ip.validate('1::256.2.3.4'));
        assert.isFalse(ip.validate('1::1.256.3.4'));
        assert.isFalse(ip.validate('1::1.2.256.4'));
        assert.isFalse(ip.validate('1::1.2.3.256'));
        assert.isFalse(ip.validate('1::300.2.3.4'));
        assert.isFalse(ip.validate('1::1.300.3.4'));
        assert.isFalse(ip.validate('1::1.2.300.4'));
        assert.isFalse(ip.validate('1::1.2.3.300'));
        assert.isFalse(ip.validate('1::900.2.3.4'));
        assert.isFalse(ip.validate('1::1.900.3.4'));
        assert.isFalse(ip.validate('1::1.2.900.4'));
        assert.isFalse(ip.validate('1::1.2.3.900'));
        assert.isFalse(ip.validate('1::300.300.300.300'));
        assert.isFalse(ip.validate('1::3000.30.30.30'));
        assert.isFalse(ip.validate('::400.2.3.4'));
        assert.isFalse(ip.validate('::260.2.3.4'));
        assert.isFalse(ip.validate('::256.2.3.4'));
        assert.isFalse(ip.validate('::1.256.3.4'));
        assert.isFalse(ip.validate('::1.2.256.4'));
        assert.isFalse(ip.validate('::1.2.3.256'));
        assert.isFalse(ip.validate('::300.2.3.4'));
        assert.isFalse(ip.validate('::1.300.3.4'));
        assert.isFalse(ip.validate('::1.2.300.4'));
        assert.isFalse(ip.validate('::1.2.3.300'));
        assert.isFalse(ip.validate('::900.2.3.4'));
        assert.isFalse(ip.validate('::1.900.3.4'));
        assert.isFalse(ip.validate('::1.2.900.4'));
        assert.isFalse(ip.validate('::1.2.3.900'));
        assert.isFalse(ip.validate('::300.300.300.300'));
        assert.isFalse(ip.validate('::3000.30.30.30'));
        assert.isFalse(ip.validate('2001:DB8:0:0:8:800:200C:417A:221'));
        assert.isFalse(ip.validate('FF01::101::2'));
        assert.isFalse(ip.validate('1111:2222:3333:4444::5555:'));
        assert.isFalse(ip.validate('1111:2222:3333::5555:'));
        assert.isFalse(ip.validate('1111:2222::5555:'));
        assert.isFalse(ip.validate('1111::5555:'));
        assert.isFalse(ip.validate('::5555:'));
        assert.isFalse(ip.validate(':::'));
        assert.isFalse(ip.validate('1111:'));
        assert.isFalse(ip.validate(':'));
        assert.isFalse(ip.validate(':1111:2222:3333:4444::5555'));
        assert.isFalse(ip.validate(':1111:2222:3333::5555'));
        assert.isFalse(ip.validate(':1111:2222::5555'));
        assert.isFalse(ip.validate(':1111::5555'));
        assert.isFalse(ip.validate(':::5555'));
        assert.isFalse(ip.validate('1.2.3.4:1111:2222:3333:4444::5555'));
        assert.isFalse(ip.validate('1.2.3.4:1111:2222:3333::5555'));
        assert.isFalse(ip.validate('1.2.3.4:1111:2222::5555'));
        assert.isFalse(ip.validate('1.2.3.4:1111::5555'));
        assert.isFalse(ip.validate('1.2.3.4::5555'));
        assert.isFalse(ip.validate('1.2.3.4::'));
        assert.isFalse(ip.validate('fe80:0000:0000:0000:0204:61ff:254.157.241.086'));
        assert.isFalse(ip.validate('123'));
        assert.isFalse(ip.validate('ldkfj'));
        assert.isFalse(ip.validate('2001::FFD3::57ab'));
        assert.isFalse(ip.validate('2001:db8:85a3::8a2e:37023:7334'));
        assert.isFalse(ip.validate('2001:db8:85a3::8a2e:370k:7334'));
        assert.isFalse(ip.validate('1:2:3:4:5:6:7:8:9'));
        assert.isFalse(ip.validate('1::2::3'));
        assert.isFalse(ip.validate('1:::3:4:5'));
        assert.isFalse(ip.validate('1:2:3::4:5:6:7:8:9'));
        assert.isFalse(ip.validate('::ffff:2.3.4'));
        assert.isFalse(ip.validate('::ffff:257.1.2.3'));
        assert.isFalse(ip.validate('::ffff:12345678901234567890.1.26'));
    });

});
